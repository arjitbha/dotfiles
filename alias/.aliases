#!/usr/bin/env zsh
function alias_if_exists() {
    # Does the alias only if the aliased program is installed
    if command -v $2 > /dev/null; then
        alias "$1"="$2"
    fi
}


# Better defaults
alias_if_exists "cat" "bat"
alias_if_exists "ptop" "bpytop"


# Shortcuts

alias_if_exists "dc" "docker-compose"
## ls
if command -v exa > /dev/null; then
  alias ls=exa
  alias l="exa -1"
  alias la="exa -la"
  alias lh="exa -lh"
else
  alias l='ls -l'
  alias la='ls -la'
  alias lh='ls -lth'
fi

## Git
alias gX='git add -u && git commit -m "x" && git push'
alias gsp='git stash && git pull && git stash pop'
function gD(){
    git diff $@ | ydiff -s -w0 --wrap
}

## Jupyter
alias jc="jupyter console"
alias jco="jupyter nbconvert"
alias jn="jupyter notebook"
alias jn-b="jupyter notebook --no-browser"

## Misc
alias my-ip="curl ipinfo.io/ip 2> /dev/null"
alias spell='aspell check'
alias grepc="grep -P --color=always" #Color grep

# toggle "Disk Not Ejected Properly" mac os notifications
alias disable_disk_not_ejected="sudo defaults write /Library/Preferences/SystemConfiguration/com.apple.DiskArbitration.diskarbitrationd.plist DADisableEjectNotification -bool YES && sudo pkill diskarbitrationd"
alias enable_disk_not_ejected="sudo defaults write /Library/Preferences/SystemConfiguration/com.apple.DiskArbitration.diskarbitrationd.plist DADisableEjectNotification -bool NO && sudo pkill diskarbitrationd"

alias printpath='echo $PATH | sed "s/:/\\n/g"'
# Other
  # Create separator using current columns
alias sep='tput cols | python -c "import sys; print(\"=\"*int(sys.stdin.read().strip()))"'

# Rename terminal Windows
  # $1 = type; 0 - both, 1 - tab, 2 - title
  # rest = text
setTerminalText () {
    # echo works in bash & zsh
    local mode=$1 ; shift
    echo -ne "\033]$mode;$@\007"
}
stt_both  () { setTerminalText 0 $@; }
stt_tab   () { setTerminalText 1 $@; }
stt_title () { setTerminalText 2 $@; }

tn () { stt_tab $@ && tmux new -s $@; }
ta () { stt_tab $@ && tmux a -t $@; }

# Extract most known archives with one command
extract () {
    if [ -f $1 ] ; then
      case $1 in
        *.tar.bz2)   tar xjf $1     ;;
        *.tar.gz)    tar xvf $1     ;;
        *.bz2)       bunzip2 $1     ;;
        *.rar)       unrar e $1     ;;
        *.gz)        gunzip $1      ;;
        *.tar)       tar xf $1      ;;
        *.tbz2)      tar xjf $1     ;;
        *.tgz)       tar xzf $1     ;;
        *.zip)       unzip $1       ;;
        *.Z)         uncompress $1  ;;
        *.7z)        7z x $1        ;;
        *)     echo "'$1' cannot be extracted via extract()" ;;
          esac
      else
          echo "'$1' is not a valid file"
      fi
}

# SEARCHING

alias qfind="find . -name "                 # qfind:    Quickly search for file
ff () { /usr/bin/find . -name "$@" ; }      # ff:       Find file under the current directory
ffs () { /usr/bin/find . -name "$@"'*' ; }  # ffs:      Find file whose name starts with a given string
ffe () { /usr/bin/find . -name '*'"$@" ; }  # ffe:      Find file whose name ends with a given string

###########################################################################################################################

# SECRET ALIASES
if [ -f ~/.secret-aliases ]; then
    source ~/.secret-aliases
fi

# LOCAL ALIASES
if [ -f ~/.local-aliases ]; then
    source ~/.local-aliases
fi

# WORK ALIASES
if [ -f ~/.work_aliases ]; then
    source ~/.work_aliases
fi

###########################################################################################################################

# Functions
# Like a local wormhole
function snd() {
    mkdir -p /tmp/passage
    /bin/cp $1 /tmp/passage
    /bin/rm /tmp/passage/last &>/dev/null || true
    echo $1 > /tmp/passage/last
}

function rcv() {
    file=$(cat /tmp/passage/last)
    /bin/cp -i "/tmp/passage/$file" $file
    /bin/rm "/tmp/passage/$file"
}

# Complete from google
function auto() {
    url='https://www.google.com/complete/search?client=hp&hl=en&xhr=t'
    # NB: user-agent must be specified to get back UTF-8 data!
    curl -H 'user-agent: Mozilla/5.0' -sSG --data-urlencode "q=$*" "$url" |
        jq -r ".[1][][0]" |
        sed 's,</\?b>,,g'
}



###########################################################################################################################


# PROCESS MANAGEMENT

# findPid: find out the pid of a specified process
# ------------------------------------------------------------
# Note that the command name can be specified via a regex
# E.g. findPid '/d$/' finds pids of all processes with names ending in 'd'
# Without the 'sudo' it will only find processes of the current user
# ------------------------------------------------------------
findPid () { lsof -t -c "$@" ; }


# NETWORKING

alias netCons='lsof -i'                             # netCons:      Show all open TCP/IP sockets
alias flushDNS='dscacheutil -flushcache'            # flushDNS:     Flush out the DNS Cache
alias lsock='sudo /usr/sbin/lsof -i -P'             # lsock:        Display open sockets
alias lsockU='sudo /usr/sbin/lsof -nP | grep UDP'   # lsockU:       Display only open UDP sockets
alias lsockT='sudo /usr/sbin/lsof -nP | grep TCP'   # lsockT:       Display only open TCP sockets
alias ipInfo0='ipconfig getpacket en0'              # ipInfo0:      Get info on connections for en0
alias ipInfo1='ipconfig getpacket en1'              # ipInfo1:      Get info on connections for en1
alias openPorts='sudo lsof -i | grep LISTEN'        # openPorts:    All listening connections


###########################################################################################################################


# OS dependent aliases
case "$(uname -s)" in

  Darwin)
    # echo 'Mac OS X'

    alias chrome="/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome &"
    alias chromec="/Applications/Google\ Chrome\ Canary.app/Contents/MacOS/Google\ Chrome\ Canary &"

    alias readlink="greadlink"

    # MacOS GNUs
    for i in awk chgrp chmod chown chroot cut date df du echo egrep env false fgrep find grep join kill link ln logname make mkdir mknod mktemp mv nice nohup paste perf printf pwd readlink realpath rm rmdir sed sort split tac tail tar tee test touch tr true truncate tty uniq unlink unzip uptime users who whoami yes zip; do
      alias_if_exists "$i" "g$i"
    done
    alias_if_exists "id" "/usr/local/bin/gid"
    alias rm="/usr/local/bin/grm -i"
    alias mv="/usr/local/bin/gmv -i"
    alias cp="/usr/local/bin/gcp -i"

    # SEARCHING

    # spotlight: Search for a file using MacOS Spotlight's metadata
    spotlight () { mdfind "kMDItemDisplayName == '$@'wc"; }

#     # cdf: 'cd's to frontmost window of MacOS Finder
#     # !!! Note: this requires Finder access
#     cdf () {
#         currFolderPath=$( /usr/bin/osascript <<EOT
#             tell application "Finder"
#                 try
#             set currFolder to (folder of the front window as alias)
#                 on error
#             set currFolder to (path to desktop folder as alias)
#                 end try
#                 POSIX path of currFolder
#             end tell
# EOT
#         )
#         echo "cd to \"$currFolderPath\""
#         cd "$currFolderPath"
#     }
    ;;

  Linux)
    # echo 'Linux'
    ;;

  CYGWIN*|MINGW32*|MSYS*)
    # echo 'MS Windows'
    ;;

  # Add here more strings to compare
  # See correspondence table at the bottom of this answer

  *)
    # echo 'other OS'
    ;;
esac


# Shell dependent Alias (only zsh has global aliases)
case $SHELL in
*/zsh)
   # assume Zsh
   ;;
*/bash)
   # assume Bash
   ;;
*)
   # assume something else
   ;;
esac
